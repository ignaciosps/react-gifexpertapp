{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","search","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BL,EAAc,IACdH,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,UAMvC,2BACIC,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,4DACJ,mCACTC,EAASC,UAAUH,GACX,GACRI,EAJa,iDAIoCF,EAJpC,kBAGL,GAHK,oBACJ,oCADI,SAKAG,MAAOD,GALP,cAKbE,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAZtB,kBAeZK,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACjC,OACI,yBAAKa,UAAU,0CACX,yBAAKC,IAAQd,EAAMe,IAAQN,IAC3B,+BAAMA,EAAN,OCFCO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAX,GACHS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAItB,CAACrB,IAGGsB,EDhBwBI,CAAc1B,GAAjCc,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAsCjB,GAClDqB,GAAW,uBAAGJ,UAAU,oCAAb,iBACb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIgB,IAAQhB,EAAIC,IACPD,UEkBlBiB,EA/BM,WAAM,MAGa1C,mBAAS,CAAC,kBAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAUvB,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,4BAEQ4C,EAAWnB,KAAK,SAAAV,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAWA,UCnBvC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f7d9bdf7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setInputValue('');\r\n            setCategories( cats => [inputValue, ...cats ]);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"Text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGifs = async( category ) => {\r\n    const apiKey = 'OkHZanpqvvjvwEAYOMhHR4cllZwrmTco';\r\n    const search = encodeURI(category);\r\n    const limit = 10;\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ search }&limit=${ limit }&api_key=${ apiKey }`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src = { url } alt = { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\"> Cargando... </p> }\r\n            <div className=\"card-grid\" >\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key = { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( images => {\r\n                setState({\r\n                    data: images,\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch Man', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n/*\r\n    const handleAdd = () => {\r\n        //setCategories( [...categories, 'Hunter x Hunter']);\r\n        //setCategories( cats => [...cats, 'Hunter x Hunter']);\r\n    }\r\n*/\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={ setCategories } />\r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={ category }\r\n                        /> \r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}